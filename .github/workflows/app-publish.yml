name: Publish PyPI Package & Docker

on:
  release:
    types: [released, prereleased]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Caching pip packages
        uses: actions/cache@v2
        id: pip-cache # use this to check for `cache-hit` (`steps.pip-cache.outputs.cache-hit != 'true'`)
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install build dependencies
        run: |
          sudo apt install libx11-dev libxcursor-dev libpng-dev
        continue-on-error: false

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip

          # For generating stubfiles using `stubgen` & Linting
          python -m pip install mypy flake8

          # clickgen dependencies
          python -m pip install pillow

          # for build
          python -m pip install setuptools wheel twine
        continue-on-error: false

      - name: Linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Generating clickgen `stubfile`
        run: |
          rm -rf src/clickgen/*.pyi
          make stubgen

      - name: Build Xcursorgen
        run: make compile_xcursorgen
        continue-on-error: false

      - name: Building
        run: python setup.py sdist bdist_wheel
        continue-on-error: false

      - name: Testing
        run: |
          pip install -U pytest
          python -m pytest -vv
        continue-on-error: false

      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/clickgen
          cache_froms: python:3-alpine:latest
          tags: latest, 1.1
          tag_with_ref: true
        continue-on-error: false

      - name: Publishing to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine --version
          twine upload dist/*

      - uses: actions/upload-artifact@master
        if: success()
        with:
          name: dist
          path: dist

      - uses: actions/upload-artifact@master
        if: success()
        with:
          name: xcursorgen
          path: src/clickgen/xcursorgen.so
