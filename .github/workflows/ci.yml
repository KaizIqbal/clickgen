name: ci

on:
  push:
    paths-ignore:
      - README.md
      - LICENSE

  pull_request:
    paths-ignore:
      - README.md
      - LICENSE
    branches:
      - main

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Caching pip packages
        uses: actions/cache@v4
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install tox-gh-actions
        continue-on-error: false

      - name: Test with tox
        run: tox
        continue-on-error: false

  build:
    needs: pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python "3.x"
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Caching pip packages
        uses: actions/cache@v4
        id: pip-cache # use this to check for `cache-hit` (`steps.pip-cache.outputs.cache-hit != 'true'`)
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install setuptools build
          python -m pip install pytest pytest-cov
        continue-on-error: false

      - name: Building clickgen
        run: python -m build
        continue-on-error: false

      - uses: actions/upload-artifact@master
        if: success()
        with:
          name: dist
          path: dist

      - name: Generating 'coverage.xml'
        run: |
          python -m pip install dist/clickgen-*.tar.gz
          python -m pytest --cov-report=xml --cov=src/clickgen
        continue-on-error: false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - uses: actions/upload-artifact@master
        if: success()
        with:
          name: coverage
          path: coverage.xml
